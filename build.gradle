plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6.+" apply false
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

architectury {
    minecraft = rootProject.minecraft_version
}

def forgeDir = new File(project.projectDir, 'forge/build/libs/')
def fabricDir = new File(project.projectDir, 'fabric/build/libs/')
def commonDir = new File(project.projectDir, 'common/build/libs/')

forgeDir.mkdirs()
fabricDir.mkdirs()
commonDir.mkdirs()

def filter = { File file -> file.getName().contains(mod_version) } as FileFilter

def forgeFiles = forgeDir.listFiles(filter)
def fabricFiles = fabricDir.listFiles(filter)
def commonFiles = commonDir.listFiles(filter)

githubRelease {
    token project.findProperty("github") ?: System.getenv("github") ?: ""
    owner "Jeryn99"
    repo "AudreysAdditions"
    tagName "v$rootProject.minecraft_version-$project.mod_version"
    targetCommitish "mc/1.20.1"
    releaseName "[$rootProject.minecraft_version] Audreys Additions - v$project.mod_version"
    generateReleaseNotes true
    body new File("${rootProject.projectDir}/changelog.md").text
    draft false
    prerelease false
    releaseAssets(forgeFiles + fabricFiles + commonFiles)
    allowUploadToExisting.set false
    overwrite true
    dryRun false
    apiEndpoint "https://api.github.com"
    client
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
    }
}

task publishMeEverywhere(){
    dependsOn ':forge:publishUnified'
    dependsOn ':fabric:publishUnified'
    dependsOn ':githubRelease'
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = "${project.name}-${rootProject.archives_base_name}"
    version = "${rootProject.minecraft_version}-${rootProject.mod_version}"
    group = rootProject.maven_group

    sourceSets.main.resources {
        srcDir project(":common").file("src/resources").absolutePath
    }


    repositories {
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven {
            url "https://cursemaven.com"
        }

        maven {
            url 'https://jitpack.io'
        }

        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }

        maven {
            name = 'GeckoLib'
            url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        }


        flatDir {
            dirs '../mods'
        }

    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
